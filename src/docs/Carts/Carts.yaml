paths:
  /api/carts/getcartfromuser:
    get:
      summary: Obtiene el carrito del usuario logueado
      tags:
        - Carts
      parameters:
        - $ref: "#/components/parameters/token"
      responses:
        200:
          description: Devuelve el carrito del usuario logueado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        500:
          description: Error del servidor
  /api/carts:
    post:
      summary: Crea un nuevo carrito al usuario logueado
      tags:
        - Carts
      parameters:
        - $ref: "#/components/parameters/token"
      responses:
        201:
          description: Nuevo carrito creado correctamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        500:
          description: Error del servidor
  /api/carts/{cid}:
    get:
      summary: Obtiene los productos por ID del carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: string
        - $ref: "#/components/parameters/token"
      responses:
        200:
          description: Devuelve los productos por ID del carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
    delete:
      summary: Elimina todos los productos del carrito por ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: number
        - $ref: "#/components/parameters/token"
      responses:
        200:
          description: Carrito vaciado correctamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un producto por ID al carrito por ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: string
        - name: pid
          in: path
          description: Recibe el id del producto
          required: true
          type: string
        - $ref: "#/components/parameters/token"
      responses:
        201:
          description: Producto agregado correctamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
    delete:
      summary: Elimina un producto por ID del carrito por ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: string
        - name: pid
          in: path
          description: Recibe el id del producto
          required: true
          type: string
        - $ref: "#/components/parameters/token"
      responses:
        200:
          description: Producto eliminado correctamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
    put:
      summary: Actualiza la cantidad de un producto del carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: string
        - name: pid
          in: path
          description: Recibe el id del producto
          required: true
          type: string
        - $ref: "#/components/parameters/token"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: number
                  description: Cantidad del producto
      responses:
        201:
          description: Carrito actualizado correctamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
  /api/carts/{cid}/purchase:
    post:
      summary: Realiza la compra del carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          description: Recibe el id del carrito
          required: true
          type: string
        - $ref: "#/components/parameters/token"
      responses:
        201:
          description: Compra realizada correctamente
        401:
          description: El usuario no está autenticado
        404:
          description: Carrito no encontrado
        500:
          description: Error del servidor
components:
  schemas:
    Cart:
      type: object
      required:
        - user_id
        - products
      properties:
        user_id:
          type: string
          description: ID del usuario
        products:
          type: array
          description: Productos del carrito
          items:
            type: object
            properties:
              product:
                type: object
                description: ID del producto (mongoDB) [populate]
                $ref: "#/components/schemas/Product"
              quantity:
                type: number
                description: Cantidad del producto
  token:
    name: authentication
    in: header
    description: Token de autenticación
    required: true
    type: string
